{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\netha\\\\files_handlers\\\\FileHandler\\\\src\\\\editComponent\\\\Edit.jsx\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPen } from '@fortawesome/free-solid-svg-icons';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Edit = ({\n  fileId,\n  fetchData,\n  closeModal\n}) => {\n  _s();\n  const [newFileName, setNewFileName] = useState('');\n  const handleEdit = async () => {\n    try {\n      await axios.put(`http://localhost:3001/editFile/${fileId}`, {\n        filename: newFileName\n      });\n      fetchData(); // Refresh the data after editing\n      closeModal(); // Close the edit modal or navigate back\n    } catch (error) {\n      console.error('Error editing file', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" hello \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      button: true,\n      className: \"btn btn-outline-success\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faPen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 64\n      }, this), \"Update\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newFileName,\n      onChange: e => setNewFileName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEdit,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(Edit, \"YHISQ94l1Xgd1eazj6yFMNmgSGg=\");\n_c = Edit;\nexport default Edit;\nvar _c;\n$RefreshReg$(_c, \"Edit\");","map":{"version":3,"names":["FontAwesomeIcon","faPen","React","useState","axios","jsxDEV","_jsxDEV","Edit","fileId","fetchData","closeModal","_s","newFileName","setNewFileName","handleEdit","put","filename","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","button","className","icon","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/netha/files_handlers/FileHandler/src/editComponent/Edit.jsx"],"sourcesContent":["\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPen} from '@fortawesome/free-solid-svg-icons'\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\n\r\nconst Edit =({ fileId, fetchData, closeModal })=>{\r\n    const [newFileName, setNewFileName] = useState('');\r\n\r\n    const handleEdit = async () => {\r\n      try {\r\n        await axios.put(`http://localhost:3001/editFile/${fileId}`, { filename: newFileName });\r\n        fetchData(); // Refresh the data after editing\r\n        closeModal(); // Close the edit modal or navigate back\r\n      } catch (error) {\r\n        console.error('Error editing file', error);\r\n      }\r\n    };\r\n  \r\n    \r\n    return(\r\n        <div>\r\n            <h1> hello </h1>\r\n            <button button className=\"btn btn-outline-success\"><FontAwesomeIcon icon={faPen}/>Update</button>\r\n            <input type=\"text\" value={newFileName} onChange={(e) => setNewFileName(e.target.value)} />\r\n      <button onClick={handleEdit}>Save</button>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Edit\r\n\r\n"],"mappings":";;AACA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,KAAK,QAAO,mCAAmC;AACxD,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1B,MAAMC,IAAI,GAAEA,CAAC;EAAEC,MAAM;EAAEC,SAAS;EAAEC;AAAW,CAAC,KAAG;EAAAC,EAAA;EAC7C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMV,KAAK,CAACW,GAAG,CAAE,kCAAiCP,MAAO,EAAC,EAAE;QAAEQ,QAAQ,EAAEJ;MAAY,CAAC,CAAC;MACtFH,SAAS,CAAC,CAAC,CAAC,CAAC;MACbC,UAAU,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAGD,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBjB,OAAA;MAAQkB,MAAM;MAACC,SAAS,EAAC,yBAAyB;MAAAN,QAAA,gBAACb,OAAA,CAACN,eAAe;QAAC0B,IAAI,EAAEzB;MAAM;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,UAAM;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACjGjB,OAAA;MAAOqB,IAAI,EAAC,MAAM;MAACC,KAAK,EAAEhB,WAAY;MAACiB,QAAQ,EAAGC,CAAC,IAAKjB,cAAc,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChGjB,OAAA;MAAQ0B,OAAO,EAAElB,UAAW;MAAAK,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnC,CAAC;AAEd,CAAC;AAAAZ,EAAA,CAvBKJ,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAyBV,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}